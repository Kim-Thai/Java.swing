package qltv.view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class QLMuonTraJPanel extends javax.swing.JPanel {

    connect_sql a=new connect_sql();
    Connection con=a.getConnectionTo();
    DefaultTableModel  mode;
    String maphieu=null,ngayhan=null,ngay_han_tra_moi=null,MaDG=null,MaSach=null,NgayMuon=null,TinhTrang=null,MaAD=null;
    int k=0;
    
    public QLMuonTraJPanel() {
        initComponents();
        show_DuLieu();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_event = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_muontra = new javax.swing.JTable();
        btn_Muon = new javax.swing.JButton();
        btn_GiaHan = new javax.swing.JButton();
        btn_TraSach = new javax.swing.JButton();
        txt_MaDG = new javax.swing.JTextField();
        btn_TimKiem = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        panel_event.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qltv/images/phieumuon-icon.png"))); // NOI18N
        jLabel1.setText("DANH SÁCH PHIẾU MƯỢN");

        javax.swing.GroupLayout panel_eventLayout = new javax.swing.GroupLayout(panel_event);
        panel_event.setLayout(panel_eventLayout);
        panel_eventLayout.setHorizontalGroup(
            panel_eventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_eventLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addGap(383, 383, 383))
        );
        panel_eventLayout.setVerticalGroup(
            panel_eventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_eventLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        table_muontra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu", "Tên bạn đọc", "Tên sách", "Ngày mượn", "Ngày hẹn trả", "Tình trạng"
            }
        ));
        table_muontra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_muontraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_muontra);

        btn_Muon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qltv/images/add-icon.png"))); // NOI18N
        btn_Muon.setText("Mượn Sách");
        btn_Muon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MuonActionPerformed(evt);
            }
        });

        btn_GiaHan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qltv/images/edit-icon.png"))); // NOI18N
        btn_GiaHan.setText("Gia Hạn");
        btn_GiaHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GiaHanActionPerformed(evt);
            }
        });

        btn_TraSach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qltv/images/delete-icon.png"))); // NOI18N
        btn_TraSach.setText("Trả Sách");
        btn_TraSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TraSachActionPerformed(evt);
            }
        });

        btn_TimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qltv/images/search-icon.png"))); // NOI18N
        btn_TimKiem.setText("Tìm Kiếm");
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_event, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_MaDG, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_TimKiem)
                .addGap(18, 18, 18)
                .addComponent(btn_Muon)
                .addGap(23, 23, 23)
                .addComponent(btn_GiaHan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_TraSach)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_event, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Muon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_TraSach, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_GiaHan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_MaDG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 78, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void show_DuLieu(){
        try {
            table_muontra.removeAll();
            String []arr={"Mã Phiếu","Mã Độc Giả", "Mã Sách","Mã admin cho mượn","Ngày Mượn ","Hạn Ngày Trả" ,"Tình trạng"};
            mode=new  DefaultTableModel(arr,0);
            String sql ="select * from MuonTraSach"; 
            PreparedStatement ps=con.prepareCall(sql);
            
            ResultSet rs=ps.executeQuery();
            while(rs.next())
            {
                Vector vt=new Vector();
                vt.add(rs.getString("MaPhieu"));
                vt.add(rs.getString("MaDG"));
                vt.add(rs.getString("MaSach"));
                vt.add(rs.getString("MaAd"));
                vt.add(rs.getString("NgayMuon"));
                vt.add(rs.getString("NgayHenTra"));
                vt.add(rs.getString("TinhTrang"));
                mode.addRow(vt);
            }
            table_muontra.setModel(mode);
        } catch (SQLException ex) {
            //Logger.getLogger(Dang_ki_ID.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Lỗi tại connection sql");
        }
        
    }
    private void btn_MuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MuonActionPerformed

        new PhieuJFrame().setVisible(true);
            show_DuLieu();
            
    }//GEN-LAST:event_btn_MuonActionPerformed

    private void btn_GiaHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GiaHanActionPerformed
        if(k==0)    JOptionPane.showMessageDialog(this, "Bạn chưa chọn sách để gia hạn !!!");
        else if(k==1)
        {
            if(TinhTrang.equals("Đã Trả")==true)
        {
            JOptionPane.showMessageDialog(this, "Sách này bạn đã trả rồi nha!!!");
        }
            else
                try {
                    String sql = "UPDATE   MuonTraSach SET NgayHenTra=?  where MaPhieu=?";
                    PreparedStatement statement = con.prepareStatement(sql);
                    
                    statement.setString(1, ngay_han_tra_moi);

                    statement.setString(2,maphieu);

                    int rowsUpdate = statement.executeUpdate();
                    
                    if (rowsUpdate > 0) {
                        JOptionPane.showMessageDialog(this, "Bạn đã gia hạn thành công!!!");
                        show_DuLieu();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Lỗi gia hạn không thành công !!!");
                }
        } 
    }//GEN-LAST:event_btn_GiaHanActionPerformed

    private void btn_TraSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TraSachActionPerformed
        System.out.println("k= "+ k);
        System.out.println("tinh trạng"+ TinhTrang);
        if(k==0)   
        {JOptionPane.showMessageDialog(this, "Bạn chưa chọn sách để trả !!!");}
        if(k==1)
        {
            if(TinhTrang.equalsIgnoreCase("Đã Trả")==true)
                {
                    JOptionPane.showMessageDialog(this, "Sách này bạn đã trả rồi nha!!!");
                }
                else if(TinhTrang.equalsIgnoreCase("Chưa")==true)
                {
                    try {
                    String sql = "UPDATE   MuonTraSach SET TinhTrang=?  where MaPhieu=?";
                    PreparedStatement statement = con.prepareStatement(sql);
                    statement.setString(1, "Đã Trả");
                    statement.setString(2,maphieu);
                    int rowsTraSach = statement.executeUpdate();
                    if (rowsTraSach > 0) {
                        JOptionPane.showMessageDialog(this, "Bạn đã trả sách thành công!!!");
                        trasach();
                        show_DuLieu();
                    }
                    } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Lỗi trả không thành công !!!");
                    
                }
        }
        
        }   
    }//GEN-LAST:event_btn_TraSachActionPerformed
    private void trasach(){
        // khi trả thì tăng số lượng sách vào bảng sách
        int soluong=0;
                try {
            Statement sta=con.createStatement();
            ResultSet rss=sta.executeQuery("select SoLuongSach  from Sach where MaSach ='" +MaSach+"'");
            while(rss.next())
            {
                 soluong=(Integer.parseInt(rss.getString("SoLuongSach"))+1);
                 System.out.println("SoLuongSach:"+soluong);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(QLMuonTraJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        //
        
        try {
                    String sql = "UPDATE   Sach SET SoLuongSach=?  where MaSach=?";
                    PreparedStatement statement = con.prepareStatement(sql);
                    
                    statement.setString(1,String.valueOf((soluong)) );

                    statement.setString(2,MaSach);
                    int rowsUpdate = statement.executeUpdate();
                    if (rowsUpdate > 0) {
                        System.out.println("Tăng tành công");
                    }
                    
   
                } catch (SQLException ex) {
                    System.out.println("lỗi thêm bảng sách");
                }
        
    }
    private void table_muontraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_muontraMouseClicked
        k=1;
        try {
            // lấy mã phiếu
            int index=table_muontra.getSelectedRow();
            maphieu=((String)(mode.getValueAt(index,0)));
            MaDG=((String)(mode.getValueAt(index,1)));
            MaSach=((String)(mode.getValueAt(index,2)));
            MaAD=((String)(mode.getValueAt(index,3)));
            NgayMuon=((String)(mode.getValueAt(index,4)));
            ngayhan=((String)(mode.getValueAt(index,5)));
            TinhTrang=((String)(mode.getValueAt(index,6)));
            
            Calendar cal = Calendar.getInstance();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date date= sdf.parse(ngayhan);
            cal.setTime(date);
            cal.add(GregorianCalendar.DAY_OF_YEAR, 10);
            ngay_han_tra_moi=sdf.format(cal.getTime());
            
        } catch (ParseException ex) {
            Logger.getLogger(QLMuonTraJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_table_muontraMouseClicked

    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
        // tìm sách đang mượn của ai đó.
        int flag=0;
        
        try {
            String sql="select * from MuonTraSach where MaDG=? " ;
                PreparedStatement pre=con.prepareStatement(sql);
                pre.setString(1, txt_MaDG.getText());
                ResultSet rs=pre.executeQuery();
                if(rs.next())
                {
                    flag=1;
                    
                }
        } catch (Exception e) {
            System.out.println(e);
        }
        if(flag==1)
        show_DuLieu_Muon();
        else
            JOptionPane.showMessageDialog(this, "Không có mã độc giả này rồi !!");
    }//GEN-LAST:event_btn_TimKiemActionPerformed
    public void show_DuLieu_Muon(){
        try {
            table_muontra.removeAll();
            String []arr={"Mã Phiếu","Mã Độc Giả", "Mã Sách","Mã admin cho mượn","Ngày Mượn ","Hạn Ngày Trả" ,"Tình trạng"};
            mode=new  DefaultTableModel(arr,0);
            String sql ="select * from MuonTraSach where MaDG='"+txt_MaDG.getText()+"'"; 
            PreparedStatement ps=con.prepareCall(sql);
            
            ResultSet rs=ps.executeQuery();
            while(rs.next())
            {
                Vector vt=new Vector();
                vt.add(rs.getString("MaPhieu"));
                vt.add(rs.getString("MaDG"));
                vt.add(rs.getString("MaSach"));
                vt.add(rs.getString("MaAd"));
                vt.add(rs.getString("NgayMuon"));
                vt.add(rs.getString("NgayHenTra"));
                vt.add(rs.getString("TinhTrang"));
                mode.addRow(vt);
            }
            table_muontra.setModel(mode);
        } catch (SQLException ex) {
            //Logger.getLogger(Dang_ki_ID.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Lỗi tại connection sql");
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_GiaHan;
    private javax.swing.JButton btn_Muon;
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_TraSach;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel_event;
    private javax.swing.JTable table_muontra;
    private javax.swing.JTextField txt_MaDG;
    // End of variables declaration//GEN-END:variables
}
